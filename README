RVGun is a tool for Tweak Software's RV that allows users to upload media from RV to Shotgun.
The process of selecting the project, entity and task to bind the version to is assisted by RVGun,
showing only shotgun contents the user is assigned to.
RVGun will:
> Create the version instance in Shotgun
> Label it properly, including incremental version number
> Create a quicktime movie with slate showing version's details
> Create a thumbnail from current frame in RV
> Upload thumbnail and movie to shotgun
> Create an RV field in shotgun with a rvlink to the original content



RVGun comes in the form of a rv package containing:

> RVGun.mu              : main mu script for RV
> RVGun.ui              : user interface description for mu-qt
> PACKAGE               : package definition for RV 
> rvgun.cfg             : file containing the configuration of RVGun, listing the temp folder where the RV workspace,
    thumbnail and quicktime video will be generated before upload and the shotgun script configuration (server url, script name and key)
> users.txt             : file containing the user mapping in case system profiles don't match shotgun profiles.
    i.e. if the system user john_smith has shotgun user john-s, the users.txt file will have a row stating john_smith=john-s
> getConfig.py          : python script for parsing the rvgun configuration file
> read_usermaps.py      : python script for parsing the user mapping file
> getSGProjecs.py       : python script for retrieving all projects the current user is assigned to
> getSGEntities.py      : python script for retrieving, for the chosen project, all entities (shots and assets) the current user is assigned to
> getSGDisciplines.py   : python script that, given a project and an entity, retrieves all the disciplines with tasks assigned to the user
> getSGTasks.py         : python script that lists all the tasks assigned to a user for a certain discipline, entity and project
> publishVersionToShotgun_V2.py : python script that generates the thumbnail and quicktime video (with rvio) and uploads everything to shotgun with the proper format
> make_RVGun_Temp_Folder.py : python script that checks whether the temporary folder specified in the rvgun.cfg file exist or not and, if necessary, creates it
> README                : this readme file
> Installation_and_usage.pdf : guide for installing and using RVGun


Read the Installation and usage file for more help.